name: Validation flow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    name: Static code checks
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, 3.10]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - name: Prepare dependecies
        run: poetry install
      - name: Run lint checks
        run: make lint
      - name: Run unit tests
        run: make coverage
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1

  analyze:
    name: Analyze CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  validateHassfest:
    name: Validate againts HASSFest
    needs: [ci, analyze]
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: home-assistant/actions/hassfest@master

  validateHACS:
    name: Validate against HACS
    needs: [validateHassfest]
    runs-on: "ubuntu-latest"
    continue-on-error: true # @TODO remove before release
    steps:
      - uses: "actions/checkout@v2"
      - name: HACS validation
        uses: "hacs/action@main"
        with:
          CATEGORY: "integration"